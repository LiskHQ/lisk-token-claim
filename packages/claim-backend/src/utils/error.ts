import { Response } from 'express';

enum ErrorCode {
	NO_ELIGIBLE_CLAIM = 'NO_ELIGIBLE_CLAIM',
	INVALID_PUBKEY = 'INVALID_PUBKEY',

	ALREADY_SIGNED = 'ALREADY_SIGNED',
	INVALID_SIGNATURE = 'INVALID_SIGNATURE',
	INVALID_DESTINATION_ADDRESS = 'INVALID_DESTINATION_ADDRESS',
	INVALID_LSK_ADDRESS = 'INVALID_LSK_ADDRESS',
	PUBLIC_KEY_NOT_PART_OF_MULTISIG_ADDRESS = 'PUBLIC_KEY_NOT_PART_OF_MULTISIG_ADDRESS',
	NUMBER_OF_SIGNATURES_REACHED = 'NUMBER_OF_SIGNATURES_REACHED',
	TOO_MANY_DESTINATION = 'TOO_MANY_DESTINATION',

	UNKNOWN_ERROR = 'UNKNOWN_ERROR',
}

function httpError(res: Response, errorCode: 400 | 500, code: ErrorCode, message: string) {
	res.status(errorCode).json({
		error: true,
		code,
		message,
	});
}
export { ErrorCode, httpError };
